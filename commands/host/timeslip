#!/usr/bin/env bash
#ddev-generated
#annertech-ddev

## Description: Generate a timeslip comment for "Free Agent"
## Usage: timeslip [-t|--timew]
## Example: "ddev timeslip"

# Check for the presence of timew flags
invoke_timew=false
for arg in "$@"; do
    if [[ "$arg" == "-t" || "$arg" == "--timew" ]]; then
        invoke_timew=true
        break
    fi
done

# Get the name of the active Git branch
branch_name=$(git rev-parse --abbrev-ref HEAD)

# Extract the task ID using regex
if [[ $branch_name =~ T-([0-9]+) ]]; then
    task_id="${BASH_REMATCH[1]}"
    url="https://projects.annertech.com/app/tasks/$task_id"

    # Prompt the user for a description
    read -rp "Enter a description: " description

    # Construct the final output
    result="$description ($url)"

    # Copy to clipboard based on OS
    clipboard_command=$(command -v xclip || command -v pbcopy || command -v wl-copy)
    if [[ -n $clipboard_command ]]; then
        case $clipboard_command in
            *xclip) echo "$result" | xclip -selection clipboard ;;
            *pbcopy) echo "$result" | pbcopy ;;
            *wl-copy) echo "$result" | wl-copy --primary;;
        esac
        echo "Copied to clipboard: $result"
    else
        echo "Clipboard command not found. Please install xclip (Linux X11), wl-clipboard (Linux Waylaynd), or use pbcopy (macOS)."
        # Display the result for manual copying
        printf "Copy the following manually and paste to Free Agent:\n\n"
        printf "%s\n\n" "$result"
    fi

    # Run timew only if the -p or --plain flag is not used
    if [[ $invoke_timew == true && $(command -v timew) ]]; then
        timew s "$url"
    fi

else
    echo "No task ID found in the branch name."
fi

