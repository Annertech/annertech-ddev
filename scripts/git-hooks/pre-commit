#!/usr/bin/env bash
#ddev-generated

# @todo: Lots of repetition below in performance settings,
#  they are easy to copy over to other hooks like that but
#  the file is getting bigger. Decide if they should be in
#  a loop.

#
# Checks for wrong performance settings
#
FILES_PATTERN='system\.performance\.yml$'

# Abort commit if you are disabling CSS/JS aggregation
FORBIDDEN='preprocess: false'
STAGED_FILES=$(git diff --cached --name-only | grep -E "$FILES_PATTERN")

if [ -n "$STAGED_FILES" ]; then
    echo "$STAGED_FILES" | xargs grep --color --with-filename -n "$FORBIDDEN" \
    && echo "COMMIT REJECTED Found \"$FORBIDDEN\" references. Please remove them before committing." \
    && echo "You MUST not disable CSS/JS aggregation!" \
    && exit 1
fi

# Abort commit if you are disabling browser caching
FORBIDDEN='max_age: 0'
STAGED_FILES=$(git diff --cached --name-only | grep -E "$FILES_PATTERN")
if [ -n "$STAGED_FILES" ]; then
    echo "$STAGED_FILES" | xargs grep --color --with-filename -n "$FORBIDDEN" \
    && echo "COMMIT REJECTED Found \"$FORBIDDEN\" references. Please remove them before committing." \
    && echo "You MUST not disable browser caching!" \
    && exit 1
fi

# Abort commit if you are enabling GZIPping of CSS/JS assets
FORBIDDEN='gzip: true'
STAGED_FILES=$(git diff --cached --name-only | grep -E "$FILES_PATTERN")
if [ -n "$STAGED_FILES" ]; then
    echo "$STAGED_FILES" | xargs grep --color --with-filename -n "$FORBIDDEN" \
    && echo "COMMIT REJECTED Found \"$FORBIDDEN\" references. Please remove them before committing." \
    && echo "You MUST not enable CSS/JS GZIP in AdvAgg!" \
    && exit 1
fi

# Abort commit if you are **enabling** modules that should not be enabled
FILES_PATTERN='core\.extension\.yml$'
FORBIDDEN_PATTERNS=('devel: 0' 'devel_php: 0' 'drush_endpoint: 0')
if [ -f ".ddev/.env" ]; then
    source ".ddev/.env"
    # Also include page_cache in forbidden modules for Platform (Upsun)
    if [ "$DDEV_UPSTREAM_PROVIDER" = "platform" ]; then
        # Do NOT remove the empty space before the module name for this one!
        # It will match dynamic_page_cache too if you do so.
        FORBIDDEN_PATTERNS+=( ' page_cache: 0')
    fi
fi

STAGED_FILES=$(git diff --cached --name-only | grep -E "$FILES_PATTERN")
if [ -n "$STAGED_FILES" ]; then
    for FORBIDDEN_PATTERN in "${FORBIDDEN_PATTERNS[@]}"; do
        echo "$STAGED_FILES" | xargs grep --color --with-filename -n "$FORBIDDEN_PATTERN" \
        && echo "COMMIT REJECTED Found \"$FORBIDDEN_PATTERN\" references. Please remove them before committing." \
        && echo "Use --no-verify to bypass this check" \
        && exit 1
    done
fi

#
# Abort commit if you are **committing** forbidden modules/files
#
STAGED_FILES=$(git diff --cached --name-only)
FORBIDDEN_FOLDERS=("devel_php")
for folder in "${FORBIDDEN_FOLDERS[@]}"; do
    if echo "$STAGED_FILES" | grep -q "/$folder/"; then
        echo
        echo "COMMIT REJECTED: files in $folder are staged."
        echo "Please unstage them before committing."
        echo
        exit 1
    fi
done

#
# Abort commit if you are using a development version of the annertech-ddev addon
#
MANIFEST_FILE=".ddev/addon-metadata/annertech-ddev/manifest.yaml"
STAGED_FILES=$(git diff --cached --name-only | grep -E "$MANIFEST_FILE")

if [ -n "$STAGED_FILES" ]; then
  # Extract version value (trims spaces and quotes)
  VERSION=$(grep -E '^version:' "$MANIFEST_FILE" | awk -F': ' '{print $2}' | tr -d '"' | xargs)

  # Check if version is missing or empty
  if [[ -z "$VERSION" ]]; then
    echo "No version found in $MANIFEST_FILE"
    echo "Please install a published version of the Annertech-DDEV add-on."
    exit 1
  fi
fi

#
# All good, commit continues
#
exit 0
